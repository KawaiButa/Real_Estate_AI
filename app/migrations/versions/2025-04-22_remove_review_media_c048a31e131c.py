# type: ignore
"""REmove review media

Revision ID: c048a31e131c
Revises: 8012549c5e65
Create Date: 2025-04-22 18:41:28.723861

"""

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = 'c048a31e131c'
down_revision = '8012549c5e65'
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()

def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()

def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_actions', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('fk_user_actions_property_id_properties'), 'properties', ['property_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(batch_op.f('fk_user_actions_user_id_users'), 'users', ['user_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('user_searches', schema=None) as batch_op:
        batch_op.alter_column('search_query',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.create_unique_constraint(batch_op.f('uq_user_searches_id'), ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_user_searches_user_id_users'), 'users', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.drop_column('city')

    # ### end Alembic commands ###

def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_searches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('city', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_user_searches_user_id_images'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('uq_user_searches_user_id'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_user_searches_id'), type_='unique')
        batch_op.alter_column('type',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('search_query',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('user_actions', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_user_actions_user_id_users'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_user_actions_property_id_properties'), type_='foreignkey')

    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###

def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""

def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
